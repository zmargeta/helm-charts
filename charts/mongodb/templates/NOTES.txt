CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

{{- $fullName := include "mongodb.fullName" . }}
{{- $portNumber := int .Values.service.port }}

** Please be patient while the chart is being deployed **

MongoDB can be accessed on the following DNS name(s) and ports from within your cluster:

    {{ $fullName }}.{{ .Release.Namespace }}.svc.cluster.local

To get the root password run:

    export MONGODB_ROOT_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ template "mongodb.secretName" . }} -o jsonpath="{.data.mongodb-root-password}" | base64 -d)

To connect to your database from outside the cluster execute the following commands:

{{- if contains "NodePort" .Values.service.type }}

    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace . }} -o jsonpath="{.items[0].status.addresses[0].address}")
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace . }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ $fullName }})
    mongo --host $NODE_IP --port $NODE_PORT --authenticationDatabase admin -p $MONGODB_ROOT_PASSWORD

{{- else if contains "LoadBalancer" .Values.service.type }}

    NOTE: It may take a few minutes for the LoadBalancer IP to be available.
    Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace . }} -w {{ $fullName }}'

    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace . }} {{ $fullName }} --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")
    mongo --host $SERVICE_IP --port {{ $portNumber }} --authenticationDatabase admin -p $MONGODB_ROOT_PASSWORD

{{- else if contains "ClusterIP" .Values.service.type }}

    kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ $fullName }} {{ $portNumber }}:{{ $portNumber }} &
    mongo --host 127.0.0.1 --authenticationDatabase admin -p $MONGODB_ROOT_PASSWORD

{{- end }}

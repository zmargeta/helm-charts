apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mongodb.fullName" . }}
  labels:
    {{- include "mongodb.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mongodb.selectorLabels" . | nindent 6 }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mongodb.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "mongodb.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        args: [ "--dbpath", "{{ .Values.persistence.mountPath }}" ]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.securityContext }}
        securityContext:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        ports:
        - name: {{ .Chart.Name }}-port
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        {{- with .Values.resources }}
        resources:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME_FILE
          value: /run/secrets/{{ include "mongodb.secretName" . }}/{{ include "mongodb.secretKeyUser" . }}
        - name: MONGO_INITDB_ROOT_PASSWORD_FILE
          value: /run/secrets/{{ include "mongodb.secretName" . }}/{{ include "mongodb.secretKeyPassword" . }}
        volumeMounts:
        - name: secret-volume
          mountPath: /run/secrets/{{ include "mongodb.secretName" . }}
          readOnly: true
        - name: data-volume
          mountPath: {{ .Values.persistence.mountPath }}
      volumes:
      - name: secret-volume
        secret:
          secretName: {{ include "mongodb.secretName" . }}
      {{- if not .Values.persistence.enabled }}
      - name: data-volume
        emptyDir: { }
      {{- else if .Values.persistence.claimName }}
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ printf "%s" (tpl .Values.persistence.claimName .) }}
      {{- else }}
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ include "mongodb.fullName" . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
